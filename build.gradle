plugins {
    id 'eclipse'
    id 'idea'
    id 'java'
}

allprojects {
    repositories {
        mavenCentral()
        maven {
            // location of the maven that hosts JEI files before January 2023
            name = "Progwml6's maven"
            url = "https://dvs1.progwml6.com/files/maven/"
        }
        maven {
            // location of the maven that hosts JEI files since January 2023
            name = "Jared's maven"
            url = "https://maven.blamejared.com/"
        }
        maven {
            // location of a maven mirror for JEI files, as a fallback
            name = "ModMaven"
            url = "https://modmaven.dev"
        }
        maven {
            url = "https://www.cursemaven.com"
        }
        maven {
            url = "https://maven.terraformersmc.com"
        }
        maven {
            url "https://maven.shedaniel.me/"
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
    }

    tasks.register('feedbackClass', Copy) {
        dependsOn "jar"
        mustRunAfter ":forge:reobfJar"
        mustRunAfter ":fabric:remapJar"
        from (zipTree(new File(buildDir, "libs/${project.name }.jar"))) {
            include '**/*.class'
        }
        into new File(rootProject.buildDir, 'classes/java/main')
    }

    tasks.register('feedbackResource', Copy) {
        dependsOn "jar"
        mustRunAfter ":forge:reobfJar"
        mustRunAfter ":fabric:remapJar"
        from (zipTree(new File(buildDir, "libs/${project.name}.jar"))) {
            exclude '**/*.class'
        }
        into new File(rootProject.buildDir, 'resources/main')
    }

    tasks.register('feedback') {
        dependsOn("feedbackClass")
        dependsOn("feedbackResource")
    }
    logger.info("registered for {}", name)
//    buildDir = rootProject.buildDir
}

if (flavor == '' && flavor == 'release') {
    flavor = minecraft_version
}
def finalName = "${mod_id}_${flavor}_${mod_version}.jar"

sourceSets {
    main {}
    client {}
}

project.jar {
    dependsOn ':common:feedback'
    dependsOn ':forge:feedback'
    dependsOn ':fabric:feedback'
//    dependsOn ':fabric:feedbackClient'
    manifest {
        attributes([
                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : author,
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : rootProject.name,
                "Implementation-Version"  : mod_version,
                "Implementation-Vendor"   : author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    exclude 'io/github/reserveword/imblocker/asmdummy'
}

tasks.register('ultimate', Copy) {
    dependsOn ':common:feedback'
    dependsOn ':forge:feedback'
    dependsOn ':fabric:feedback'
//    dependsOn ':fabric:feedbackClient'
    from 'build/classes/java/main'
    from 'build/classes/java/client'
    from 'build/resources/main'
    from 'build/resources/client'
    into 'build/ultimate'
//    include 'fabric.jar'
//    rename { "${mod_id}_${flavor}_${mod_version}.jar" }
}
