plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', mod_id

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', mod_id

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")

    implementation project(':common')
}

// gradle.properties
def all_properties = [
        minecraft_version   : minecraft_version,
        mod_id              : mod_id,
        mod_name            : mod_name,
        mod_version         : mod_version,
        mod_logo            : mod_logo,
        mod_url             : mod_url,
        issues_url          : issues_url,
        maven_group         : maven_group,
        license             : license,
        credits             : credits,
        author              : author,
        email               : email,
        description         : mod_description,
        fabric_version      : fabric_version,
        yarn_mappings       : yarn_mappings,
        loader_version      : loader_version,
        forge_version       : forge_version,
        loader_version_range: loader_version_range,
        mapping_channel     : mapping_channel,
        mapping_version     : mapping_version
]

project.processResources {
    inputs.properties all_properties

    filesMatching('META-INF/mods.toml') {
        expand all_properties
    }
}

// Example for how to get properties into the manifest for reading at runtime.
project.jar {
    finalizedBy 'reobfJar'
    manifest {
        attributes([
                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : author,
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : rootProject.name,
                "Implementation-Version"  : mod_version,
                "Implementation-Vendor"   : author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    exclude 'io/github/reserveword/imblocker/asmdummy'
}
ct.buildDir